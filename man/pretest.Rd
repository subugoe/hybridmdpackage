% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pretest.R
\name{pretest}
\alias{pretest}
\alias{tabulate_metacheckable}
\alias{is_metacheckable}
\alias{assert_metacheckable}
\alias{report_metacheckable}
\alias{is_in_limit}
\alias{is_doi_from_ra_cr}
\title{Pretest acceptable DOIs}
\usage{
tabulate_metacheckable(x, ...)

is_metacheckable(x, ...)

assert_metacheckable(x, ...)

report_metacheckable(x, ...)

is_in_limit(x, limit = 1000L)

is_doi_from_ra_cr(x, ra = "Crossref")
}
\arguments{
\item{x}{A vector created by, or convertable to \code{\link[biblids:doi]{doi()}}.}

\item{...}{Additional arguments passed to the predicate functions.}

\item{limit}{Scalar integer, giving the number of DOIs to be submitted to the metacheck.}

\item{ra}{Character scalar, must be one of \code{names(doi_ras())}.}
}
\value{
A tibble with one column for each of the predicate results.
\code{TRUE} always means that a DOI passes a criterion.

Tested in order:
\enumerate{
\item \code{not_na} following \code{\link[biblids:doi]{biblids::doi()}}.
\item \code{unique}
\code{FALSE} for every 2nd and later repetition of a DOI.
DOIs are compared using \code{\link[biblids:doi]{biblids::doi()}} logic.
\item \code{within_limits}
whether remaining DOIs are within the package limit for requests.
\item \code{doi_org_found}
whether remaining DOIs are found on DOI.org,
using \code{\link[biblids:doi_api]{biblids::is_doi_found()}}.
\item \code{resolvable}
whether remaining DOIs are resolvable on DOI.org,
using \code{\link[biblids:doi_api]{biblids::is_doi_resolvable()}}.
\item \code{from_cr}
whether remaining DOIs have been deposited by the Crossref
registration agency (per doi.org).
#' 1. \code{from_cr_cr}
whether remaining DOIs have been deposited by the Crossref
registration agency (per Crossref).
}

\code{NA} can indicate that the test:
\itemize{
\item was not applicable, because a previous predicate was \code{FALSE}
}
}
\description{
Pretest acceptable DOIs
}
\details{
Before even checking what metadata has been deposited for a DOI,
a DOI has to pass a number of criteria to be eligible for metacheck.

The below criteria are assumed to be transitive but asymmetric
in the order given.
For example, if a DOI is not found on DOI.org,
it is assumed that it also \emph{cannot} be known to crossref and all later
predicates are also assumed to be \code{NA}.
This must necessarily be the case for, say, syntactically invalid DOIs,
but is more of an assumption when it comes to the consistency between
different data sources (say, DOI.org and Crossref).
}
\section{Related Functions and Methods}{
\subsection{Functions}{
\itemize{
\item \code{tabulate_metacheckable}: Tabulate results
}
\itemize{
\item \code{is_metacheckable}: Are all predicates \code{TRUE}?
}
\itemize{
\item \code{assert_metacheckable}: Assert metacheckability
}
\itemize{
\item \code{report_metacheckable}: Report summary in markdown
}
\itemize{
\item \code{is_in_limit}: Is the DOI in the limit?
}
\itemize{
\item \code{is_doi_from_ra_cr}: Is Crossref the Registration Agency (RA)?
Potentially duplicates \code{\link[biblids:doi_ra]{biblids::is_doi_from_ra()}},
or may give subtly different results.
}}}

\seealso{
Other import: 
\code{\link{get_cr_md}()}
}
\concept{import}
